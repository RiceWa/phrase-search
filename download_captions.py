import os
import subprocess
import time

def download_vtt_files(url_file, output_folder, delay=2):
    """
    Downloads .vtt caption files for a list of YouTube video URLs.
    
    Args:
        url_file (str): Path to the text file containing YouTube video URLs.
        output_folder (str): Directory where the downloaded .vtt files will be saved.
        delay (int): Delay in seconds between each download to prevent rate limiting.
    """
    # Ensure the output folder exists
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # Read the URLs from the file
    with open(url_file, 'r') as file:
        urls = file.readlines()

    # Download captions for each URL
    for index, url in enumerate(urls):
        url = url.strip()
        if not url:
            continue

        try:
            print(f"[{index + 1}/{len(urls)}] Downloading captions for: {url}")
            # Run yt-dlp to download the .vtt file only
            subprocess.run([
                "yt-dlp",
                "--write-auto-subs",    # Download autogenerated captions
                "--skip-download",      # Skip downloading the video
                "--sub-lang", "en",     # Specify subtitle language (change if needed)
                "--output", f"{output_folder}/%(id)s.%(ext)s",  # Save with video ID as the filename
                url
            ], check=True)

            # Wait to avoid rate-limiting
            print(f"Sleeping for {delay} seconds to avoid rate-limiting...")
            time.sleep(delay)

        except subprocess.CalledProcessError as e:
            print(f"Failed to download captions for {url}: {e}")

def main():
    url_file = "video_urls.txt"  # File containing video URLs
    output_folder = "vtt_files"  # Folder to save .vtt files
    delay = 0.1  # Delay in seconds between downloads

    download_vtt_files(url_file, output_folder, delay)
    print("Caption downloads completed!")

if __name__ == "__main__":
    main()
